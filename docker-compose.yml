version: '3.8'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 10

  db-user:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users
    ports:
      - "5433:5432"

  db-salle:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: salles
    ports:
      - "5434:5432"

  db-reservation:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: reservations
    ports:
      - "5435:5432"

  user_service:
    build: ./user_service
    ports:
      - "5001:5000"
    depends_on:
      kafka:
        condition: service_healthy
      db-user:
        condition: service_started
    command: ["/wait-for-it.sh", "kafka:9092", "--", "python", "app.py"]

  reservation_service:
    build: ./reservation_service
    ports:
      - "5003:5000"
    depends_on:
      kafka:
        condition: service_healthy
      db-reservation:
        condition: service_started
    command: ["/wait-for-it.sh", "kafka:9092", "--", "python", "app.py"]

  salle_service:
    build: ./salle_service
    ports:
      - "5002:5000"
    depends_on:
      db-salle:
        condition: service_started

